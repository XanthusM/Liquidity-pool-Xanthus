/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { StakingXts, StakingXtsInterface } from "../StakingXts";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lpTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UnStaked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimableReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "endStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentRewardPeriodId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardPeriodsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardsStats",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "claimableRewards",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rewardsPaid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rewardRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalRewardsPaid",
            type: "uint256",
          },
        ],
        internalType: "struct StakingXts.RewardsStats",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakedBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
    ],
    name: "newRewardPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardPeriods",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdated",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardPerTokenStaked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalRewardsPaid",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPeriodsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "startStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStakes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfos",
    outputs: [
      {
        internalType: "uint256",
        name: "userRewardPerTokenStaked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pendingRewards",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardsPaid",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006007553480156200001657600080fd5b5060405162001cdc38038062001cdc83398181016040528101906200003c91906200005b565b5050620000ea565b6000815190506200005581620000d0565b92915050565b600080604083850312156200006f57600080fd5b60006200007f8582860162000044565b9250506020620000928582860162000044565b9150509250929050565b6000620000a982620000b0565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620000db816200009c565b8114620000e757600080fd5b50565b611be280620000fa6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638252097d11610097578063e7181edc11610066578063e7181edc146102b8578063f3b294ec146102d6578063fad0138d146102f4578063fd5e6dd11461031257610100565b80638252097d146102295780638da5cb5b14610260578063b51bd40f1461027e578063bf9befb11461029a57610100565b806333b365d6116100d357806333b365d61461019f57806343b0215f146101bb5780635865b911146101ed578063769658671461020b57610100565b80630cbe28d61461010557806316934fc41461012157806327e235e3146101515780632ad7b6a914610181575b600080fd5b61011f600480360381019061011a9190611446565b610342565b005b61013b600480360381019061013691906113f4565b610545565b6040516101489190611782565b60405180910390f35b61016b600480360381019061016691906113f4565b61055d565b6040516101789190611782565b60405180910390f35b610189610575565b6040516101969190611767565b60405180910390f35b6101b960048036038101906101b4919061146f565b610725565b005b6101d560048036038101906101d091906113f4565b6109d6565b6040516101e49392919061179d565b60405180910390f35b6101f5610a00565b6040516102029190611782565b60405180910390f35b610213610b25565b6040516102209190611782565b60405180910390f35b610243600480360381019061023e9190611446565b610b6c565b6040516102579897969594939291906117d4565b60405180910390f35b610268610bc4565b6040516102759190611635565b60405180910390f35b61029860048036038101906102939190611446565b610be8565b005b6102a2610e2e565b6040516102af9190611782565b60405180910390f35b6102c0610e34565b6040516102cd9190611782565b60405180910390f35b6102de610fb2565b6040516102eb9190611782565b60405180910390f35b6102fc610fb8565b6040516103099190611782565b60405180910390f35b61032c60048036038101906103279190611446565b610fc2565b6040516103399190611635565b60405180910390f35b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156103c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bb90611687565b60405180910390fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461040f9190611863565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461049d9190611944565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806003546104ee9190611944565b6003819055503373ffffffffffffffffffffffffffffffffffffffff167f79d3df6837cc49ff0e09fd3258e6e45594e0703445bb06825e9d75156eaee8f08260405161053a9190611782565b60405180910390a250565b60026020528060005260406000206000915090505481565b60046020528060005260406000206000915090505481565b61057d61138d565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180606001604052908160008201548152602001600182015481526020016002820154815250509050600060405180608001604052806000815260200160008152602001600081526020016000815250905061061a610e34565b8160000181815250508160400151816020018181525050600061063b610a00565b9050600081111561071c57600060066001836106579190611944565b8154811061068e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600802016040518061010001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481525050905061070381611001565b8360400181815250508060e00151836060018181525050505b81935050505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107aa90611747565b60405180910390fd5b600083116107f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ed906116a7565b60405180910390fd5b818111801561080457504281115b610843576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083a90611707565b60405180910390fd5b600060068054905014806108b25750600660016006805490506108669190611944565b8154811061089d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600802016003015482115b6108f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e8906116e7565b60405180910390fd5b600660405180610100016040528060016006805490506109119190611863565b8152602001858152602001848152602001838152602001428152602001600081526020016000815260200160008152509080600181540180825580915050600190039060005260206000209060080201600090919091909150600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e0820151816007015550506006805490506007819055506109d183611040565b505050565b60086020528060005260406000206000915090508060000154908060010154908060020154905083565b6000806007541415610a155760009050610b22565b600060068054905090505b6000811115610b1c5760006006600183610a3a9190611944565b81548110610a71577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600802016040518061010001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481525050905042816040015111158015610af5575042816060015110155b15610b0857806000015192505050610b22565b508080610b14906119c0565b915050610a20565b50600090505b90565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b60068181548110610b7c57600080fd5b90600052602060002090600802016000915090508060000154908060010154908060020154908060030154908060040154908060050154908060060154908060070154905088565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008111610c2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2290611727565b60405180910390fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610cad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca4906116c7565b60405180910390fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610cf89190611944565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d869190611863565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600354610dd79190611863565b6003819055503373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d82604051610e239190611782565b60405180910390a250565b60035481565b600080610e3f610a00565b90506000811415610e54576000915050610faf565b60006006600183610e659190611944565b81548110610e9c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060080201604051806101000160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820154815260200160078201548152505090506000610f1382611183565b90506000610f2082611223565b90506000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082015481526020016001820154815260200160028201548152505090506000816020015190508281610fa39190611863565b90508096505050505050505b90565b60075481565b6000600754905090565b60018181548110610fd257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061101f8360400151846060015161133590919063ffffffff16565b905061103881846020015161134b90919063ffffffff16565b915050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110c590611747565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161112d93929190611650565b602060405180830381600087803b15801561114757600080fd5b505af115801561115b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061117f919061141d565b5050565b60008061118f83611001565b905060008360800151426111a39190611944565b905060006111ba838361136190919063ffffffff16565b905060008560c00151905060008660a0015114611217576112146112018760a001516111f3633b9aca008661136190919063ffffffff16565b61134b90919063ffffffff16565b8760c0015161137790919063ffffffff16565b90505b80945050505050919050565b6000808214156112365760009050611330565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082015481526020016001820154815260200160028201548152505090506000611327633b9aca0061131961130a85600001518961133590919063ffffffff16565b8661136190919063ffffffff16565b61134b90919063ffffffff16565b90508093505050505b919050565b600081836113439190611944565b905092915050565b6000818361135991906118b9565b905092915050565b6000818361136f91906118ea565b905092915050565b600081836113859190611863565b905092915050565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b6000813590506113c481611b67565b92915050565b6000815190506113d981611b7e565b92915050565b6000813590506113ee81611b95565b92915050565b60006020828403121561140657600080fd5b6000611414848285016113b5565b91505092915050565b60006020828403121561142f57600080fd5b600061143d848285016113ca565b91505092915050565b60006020828403121561145857600080fd5b6000611466848285016113df565b91505092915050565b60008060006060848603121561148457600080fd5b6000611492868287016113df565b93505060206114a3868287016113df565b92505060406114b4868287016113df565b9150509250925092565b6114c781611978565b82525050565b60006114da601883611852565b91506114e582611a48565b602082019050919050565b60006114fd601c83611852565b915061150882611a71565b602082019050919050565b6000611520601a83611852565b915061152b82611a9a565b602082019050919050565b6000611543601983611852565b915061154e82611ac3565b602082019050919050565b6000611566601e83611852565b915061157182611aec565b602082019050919050565b6000611589600d83611852565b915061159482611b15565b602082019050919050565b60006115ac600983611852565b91506115b782611b3e565b602082019050919050565b6080820160008201516115d86000850182611617565b5060208201516115eb6020850182611617565b5060408201516115fe6040850182611617565b5060608201516116116060850182611617565b50505050565b611620816119b6565b82525050565b61162f816119b6565b82525050565b600060208201905061164a60008301846114be565b92915050565b600060608201905061166560008301866114be565b61167260208301856114be565b61167f6040830184611626565b949350505050565b600060208201905081810360008301526116a0816114cd565b9050919050565b600060208201905081810360008301526116c0816114f0565b9050919050565b600060208201905081810360008301526116e081611513565b9050919050565b6000602082019050818103600083015261170081611536565b9050919050565b6000602082019050818103600083015261172081611559565b9050919050565b600060208201905081810360008301526117408161157c565b9050919050565b600060208201905081810360008301526117608161159f565b9050919050565b600060808201905061177c60008301846115c2565b92915050565b60006020820190506117976000830184611626565b92915050565b60006060820190506117b26000830186611626565b6117bf6020830185611626565b6117cc6040830184611626565b949350505050565b6000610100820190506117ea600083018b611626565b6117f7602083018a611626565b6118046040830189611626565b6118116060830188611626565b61181e6080830187611626565b61182b60a0830186611626565b61183860c0830185611626565b61184560e0830184611626565b9998505050505050505050565b600082825260208201905092915050565b600061186e826119b6565b9150611879836119b6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156118ae576118ad6119ea565b5b828201905092915050565b60006118c4826119b6565b91506118cf836119b6565b9250826118df576118de611a19565b5b828204905092915050565b60006118f5826119b6565b9150611900836119b6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611939576119386119ea565b5b828202905092915050565b600061194f826119b6565b915061195a836119b6565b92508282101561196d5761196c6119ea565b5b828203905092915050565b600061198382611996565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006119cb826119b6565b915060008214156119df576119de6119ea565b5b600182039050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e6f7420656e6f75676820746f6b656e73207374616b65640000000000000000600082015250565b7f496e76616c69642072657761726420706572696f6420616d6f756e7400000000600082015250565b7f4e6f7420656e6f75676820746f6b656e7320746f207374616b65000000000000600082015250565b7f496e76616c696420706572696f642073746172742074696d6500000000000000600082015250565b7f496e76616c69642072657761726420706572696f6420696e74657276616c0000600082015250565b7f43616e2774206265207a65726f00000000000000000000000000000000000000600082015250565b7f6e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b611b7081611978565b8114611b7b57600080fd5b50565b611b878161198a565b8114611b9257600080fd5b50565b611b9e816119b6565b8114611ba957600080fd5b5056fea26469706673582212208374474573409655d154df98b2240fee00cd5034dd321045ea2ee7391787df5f64736f6c63430008040033";

export class StakingXts__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _rewardTokenAddress: string,
    _lpTokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StakingXts> {
    return super.deploy(
      _rewardTokenAddress,
      _lpTokenAddress,
      overrides || {}
    ) as Promise<StakingXts>;
  }
  getDeployTransaction(
    _rewardTokenAddress: string,
    _lpTokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rewardTokenAddress,
      _lpTokenAddress,
      overrides || {}
    );
  }
  attach(address: string): StakingXts {
    return super.attach(address) as StakingXts;
  }
  connect(signer: Signer): StakingXts__factory {
    return super.connect(signer) as StakingXts__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingXtsInterface {
    return new utils.Interface(_abi) as StakingXtsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingXts {
    return new Contract(address, _abi, signerOrProvider) as StakingXts;
  }
}
