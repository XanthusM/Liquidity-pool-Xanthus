/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { XtsToken, XtsTokenInterface } from "../XtsToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526040518060400160405280600981526020017f58746873546f6b656e00000000000000000000000000000000000000000000008152506003908051906020019062000051929190620000d0565b506040518060400160405280600481526020017f5874687300000000000000000000000000000000000000000000000000000000815250600490805190602001906200009f929190620000d0565b506012600560006101000a81548160ff021916908360ff160217905550348015620000c957600080fd5b50620001e5565b828054620000de9062000180565b90600052602060002090601f0160209004810192826200010257600085556200014e565b82601f106200011d57805160ff19168380011785556200014e565b828001600101855582156200014e579182015b828111156200014d57825182559160200191906001019062000130565b5b5090506200015d919062000161565b5090565b5b808211156200017c57600081600090555060010162000162565b5090565b600060028204905060018216806200019957607f821691505b60208210811415620001b057620001af620001b6565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6114fd80620001f56000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c578063b09f126611610066578063b09f126614610214578063d28d885214610232578063dd62ed3e14610250578063e1f21c6714610280576100cf565b806370a08231146101985780639dc29fac146101c8578063a9059cbb146101e4576100cf565b806323b872dd146100d457806329cb924d14610104578063313ce5671461012257806332424aa3146101405780633eaaf86b1461015e57806340c10f191461017c575b600080fd5b6100ee60048036038101906100e99190610d9a565b6102b0565b6040516100fb9190610fc6565b60405180910390f35b61010c6102d8565b6040516101199190611123565b60405180910390f35b61012a6102e0565b6040516101379190611123565b60405180910390f35b6101486102e9565b604051610155919061113e565b60405180910390f35b6101666102fc565b6040516101739190611123565b60405180910390f35b61019660048036038101906101919190610de9565b610302565b005b6101b260048036038101906101ad9190610d35565b610310565b6040516101bf9190611123565b60405180910390f35b6101e260048036038101906101dd9190610de9565b610359565b005b6101fe60048036038101906101f99190610de9565b610367565b60405161020b9190610fc6565b60405180910390f35b61021c610383565b6040516102299190610fe1565b60405180910390f35b61023a610411565b6040516102479190610fe1565b60405180910390f35b61026a60048036038101906102659190610d5e565b61049f565b6040516102779190611123565b60405180910390f35b61029a60048036038101906102959190610d9a565b610526565b6040516102a79190610fc6565b60405180910390f35b6000803390506102c185828561053e565b6102cc8585856105ca565b60019150509392505050565b600042905090565b60006012905090565b600560009054906101000a900460ff1681565b60005481565b61030c8282610838565b5050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6103638282610980565b5050565b6000803390506103788185856105ca565b600191505092915050565b6004805461039090611287565b80601f01602080910402602001604051908101604052809291908181526020018280546103bc90611287565b80156104095780601f106103de57610100808354040283529160200191610409565b820191906000526020600020905b8154815290600101906020018083116103ec57829003601f168201915b505050505081565b6003805461041e90611287565b80601f016020809104026020016040519081016040528092919081815260200182805461044a90611287565b80156104975780601f1061046c57610100808354040283529160200191610497565b820191906000526020600020905b81548152906001019060200180831161047a57829003601f168201915b505050505081565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000610533848484610b40565b600190509392505050565b600061054a848461049f565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105c457818110156105b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ad90611043565b60405180910390fd5b6105c38484848403610b40565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561063a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063190611063565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156106aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a190611083565b60405180910390fd5b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610731576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610728906110a3565b60405180910390fd5b818103600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107c69190611175565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161082a9190611123565b60405180910390a350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089f90611103565b60405180910390fd5b806000808282546108b99190611175565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461090f9190611175565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516109749190611123565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e7906110e3565b60405180910390fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6e906110c3565b60405180910390fd5b818103600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600080828254610ace91906111cb565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b339190611123565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610bb0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba790611023565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1790611003565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610cfe9190611123565b60405180910390a3505050565b600081359050610d1a81611499565b92915050565b600081359050610d2f816114b0565b92915050565b600060208284031215610d4757600080fd5b6000610d5584828501610d0b565b91505092915050565b60008060408385031215610d7157600080fd5b6000610d7f85828601610d0b565b9250506020610d9085828601610d0b565b9150509250929050565b600080600060608486031215610daf57600080fd5b6000610dbd86828701610d0b565b9350506020610dce86828701610d0b565b9250506040610ddf86828701610d20565b9150509250925092565b60008060408385031215610dfc57600080fd5b6000610e0a85828601610d0b565b9250506020610e1b85828601610d20565b9150509250929050565b610e2e81611211565b82525050565b6000610e3f82611159565b610e498185611164565b9350610e59818560208601611254565b610e6281611317565b840191505092915050565b6000610e7a601b83611164565b9150610e8582611328565b602082019050919050565b6000610e9d601d83611164565b9150610ea882611351565b602082019050919050565b6000610ec0601683611164565b9150610ecb8261137a565b602082019050919050565b6000610ee3601e83611164565b9150610eee826113a3565b602082019050919050565b6000610f06601c83611164565b9150610f11826113cc565b602082019050919050565b6000610f29601f83611164565b9150610f34826113f5565b602082019050919050565b6000610f4c601b83611164565b9150610f578261141e565b602082019050919050565b6000610f6f601a83611164565b9150610f7a82611447565b602082019050919050565b6000610f92601883611164565b9150610f9d82611470565b602082019050919050565b610fb18161123d565b82525050565b610fc081611247565b82525050565b6000602082019050610fdb6000830184610e25565b92915050565b60006020820190508181036000830152610ffb8184610e34565b905092915050565b6000602082019050818103600083015261101c81610e6d565b9050919050565b6000602082019050818103600083015261103c81610e90565b9050919050565b6000602082019050818103600083015261105c81610eb3565b9050919050565b6000602082019050818103600083015261107c81610ed6565b9050919050565b6000602082019050818103600083015261109c81610ef9565b9050919050565b600060208201905081810360008301526110bc81610f1c565b9050919050565b600060208201905081810360008301526110dc81610f3f565b9050919050565b600060208201905081810360008301526110fc81610f62565b9050919050565b6000602082019050818103600083015261111c81610f85565b9050919050565b60006020820190506111386000830184610fa8565b92915050565b60006020820190506111536000830184610fb7565b92915050565b600081519050919050565b600082825260208201905092915050565b60006111808261123d565b915061118b8361123d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111c0576111bf6112b9565b5b828201905092915050565b60006111d68261123d565b91506111e18361123d565b9250828210156111f4576111f36112b9565b5b828203905092915050565b600061120a8261121d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611272578082015181840152602081019050611257565b83811115611281576000848401525b50505050565b6000600282049050600182168061129f57607f821691505b602082108114156112b3576112b26112e8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f617070726f766520746f20746865207a65726f20616464726573730000000000600082015250565b7f617070726f76652066726f6d20746865207a65726f2061646472657373000000600082015250565b7f696e73756666696369656e7420616c6c6f77616e636500000000000000000000600082015250565b7f7472616e736665722066726f6d20746865207a65726f20616464726573730000600082015250565b7f7472616e7366657220746f20746865207a65726f206164647265737300000000600082015250565b7f7472616e7366657220616d6f756e7420657863656564732062616c616e636500600082015250565b7f6275726e20616d6f756e7420657863656564732062616c616e63650000000000600082015250565b7f6275726e2066726f6d20746865207a65726f2061646472657373000000000000600082015250565b7f6d696e7420746f20746865207a65726f20616464726573730000000000000000600082015250565b6114a2816111ff565b81146114ad57600080fd5b50565b6114b98161123d565b81146114c457600080fd5b5056fea2646970667358221220a326bed3ad8711d3e1d1d76002445e81910e0f90cbd3c62ed45e2a0217e1639564736f6c63430008040033";

export class XtsToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<XtsToken> {
    return super.deploy(overrides || {}) as Promise<XtsToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): XtsToken {
    return super.attach(address) as XtsToken;
  }
  connect(signer: Signer): XtsToken__factory {
    return super.connect(signer) as XtsToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XtsTokenInterface {
    return new utils.Interface(_abi) as XtsTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): XtsToken {
    return new Contract(address, _abi, signerOrProvider) as XtsToken;
  }
}
